{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/Header.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport { useLanguage } from '@/context/LanguageContext';\nimport { useAuth } from '@/context/AuthContext';\n\nconst Header = () => {\n  const { t, locale, switchLanguage } = useLanguage();\n  const { user, signOut, loading } = useAuth();\n  const [showUserMenu, setShowUserMenu] = useState(false);\n\n  const handleSignOut = async () => {\n    await signOut();\n    setShowUserMenu(false);\n  };\n\n  return (\n    <header className=\"bg-white shadow-sm border-b border-gray-200\">\n      <div className=\"re-container\">\n        <nav className=\"flex justify-between items-center py-4\">\n          {/* Logo and main navigation */}\n          <div className=\"flex items-center space-x-8\">\n            <Link href=\"/\" className=\"text-2xl font-bold\" style={{ color: 'var(--re-primary-color)' }}>\n              RealEstate\n            </Link>\n            \n            <div className=\"hidden md:flex space-x-6\">\n              <Link \n                href=\"/\" \n                className=\"text-gray-700 hover:text-gray-900 font-medium transition-colors\"\n              >\n                {t('home')}\n              </Link>\n              <Link \n                href=\"/properties\" \n                className=\"text-gray-700 hover:text-gray-900 font-medium transition-colors\"\n              >\n                {t('browse_listings')}\n              </Link>\n              {user && (\n                <Link \n                  href=\"/dashboard\" \n                  className=\"text-gray-700 hover:text-gray-900 font-medium transition-colors\"\n                >\n                  {t('dashboard')}\n                </Link>\n              )}\n            </div>\n          </div>\n\n          {/* Right side - Authentication, CTA and Language selector */}\n          <div className=\"flex items-center space-x-4\">\n            {user ? (\n              <>\n                <Link \n                  href=\"/properties/new\" \n                  className=\"re-btn re-btn-primary\"\n                >\n                  {t('list_property')}\n                </Link>\n                \n                {/* User Menu */}\n                <div className=\"relative\">\n                  <button\n                    onClick={() => setShowUserMenu(!showUserMenu)}\n                    className=\"flex items-center space-x-2 text-gray-700 hover:text-gray-900 font-medium\"\n                  >\n                    <div className=\"w-8 h-8 bg-gray-300 rounded-full flex items-center justify-center\">\n                      {user.image ? (\n                        <img src={user.image} alt={user.name} className=\"w-8 h-8 rounded-full\" />\n                      ) : (\n                        <span className=\"text-sm font-medium\">{user.name.charAt(0).toUpperCase()}</span>\n                      )}\n                    </div>\n                    <span className=\"hidden sm:block\">{user.name}</span>\n                  </button>\n                  \n                  {showUserMenu && (\n                    <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1 z-50 border\">\n                      <Link\n                        href=\"/dashboard\"\n                        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                        onClick={() => setShowUserMenu(false)}\n                      >\n                        {t('dashboard')}\n                      </Link>\n                      <Link\n                        href=\"/profile\"\n                        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                        onClick={() => setShowUserMenu(false)}\n                      >\n                        {t('auth.profile')}\n                      </Link>\n                      <Link\n                        href=\"/my-properties\"\n                        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                        onClick={() => setShowUserMenu(false)}\n                      >\n                        {t('auth.my_properties')}\n                      </Link>\n                      <Link\n                        href=\"/my-visits\"\n                        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                        onClick={() => setShowUserMenu(false)}\n                      >\n                        {t('auth.my_visits')}\n                      </Link>\n                      {user.role === 'admin' && (\n                        <Link\n                          href=\"/admin\"\n                          className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                          onClick={() => setShowUserMenu(false)}\n                        >\n                          {t('auth.admin_dashboard')}\n                        </Link>\n                      )}\n                      <hr className=\"my-1\" />\n                      <button\n                        onClick={handleSignOut}\n                        disabled={loading}\n                        className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 disabled:opacity-50\"\n                      >\n                        {loading ? t('auth.signing_out') : t('auth.sign_out')}\n                      </button>\n                    </div>\n                  )}\n                </div>\n              </>\n            ) : (\n              <>\n                <Link \n                  href=\"/auth/signin\" \n                  className=\"text-gray-700 hover:text-gray-900 font-medium\"\n                >\n                  {t('auth.sign_in')}\n                </Link>\n                <Link \n                  href=\"/auth/signup\" \n                  className=\"re-btn re-btn-primary\"\n                >\n                  {t('auth.sign_up')}\n                </Link>\n              </>\n            )}\n            \n            {/* Language Selector */}\n            <select\n              value={locale}\n              onChange={(e) => switchLanguage(e.target.value)}\n              className=\"px-3 py-2 border border-gray-300 rounded-md text-sm bg-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"pt-BR\">Português (Brasil)</option>\n              <option value=\"en\">English</option>\n              <option value=\"es\">Español</option>\n            </select>\n          </div>\n        </nav>\n\n        {/* Mobile menu button - for future implementation */}\n        <div className=\"md:hidden\">\n          {/* Mobile navigation can be added here later */}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/Layout.tsx"],"sourcesContent":["'use client';\n\nimport React, { ReactNode } from 'react';\nimport Header from './Header';\n\ninterface LayoutProps {\n  children: ReactNode;\n}\n\nconst Layout = ({ children }: LayoutProps) => {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header />\n      <main className=\"flex-1\">\n        {children}\n      </main>\n      \n      {/* Footer */}\n      <footer className=\"bg-gray-900 text-white py-12 mt-16\">\n        <div className=\"re-container\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n            <div>\n              <h3 className=\"text-xl font-bold mb-4\" style={{ color: 'var(--re-secondary-color)' }}>\n                RealEstate\n              </h3>\n              <p className=\"text-gray-400\">\n                Your trusted partner in finding the perfect home or selling your property.\n              </p>\n            </div>\n            \n            <div>\n              <h4 className=\"font-semibold mb-4\">Quick Links</h4>\n              <ul className=\"space-y-2 text-gray-400\">\n                <li><a href=\"/\" className=\"hover:text-white transition-colors\">Home</a></li>\n                <li><a href=\"/properties\" className=\"hover:text-white transition-colors\">Properties</a></li>\n                <li><a href=\"/about\" className=\"hover:text-white transition-colors\">About</a></li>\n                <li><a href=\"/contact\" className=\"hover:text-white transition-colors\">Contact</a></li>\n              </ul>\n            </div>\n            \n            <div>\n              <h4 className=\"font-semibold mb-4\">Services</h4>\n              <ul className=\"space-y-2 text-gray-400\">\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Free Listings</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Premium Service</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Property Valuation</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Legal Support</a></li>\n              </ul>\n            </div>\n            \n            <div>\n              <h4 className=\"font-semibold mb-4\">Contact Info</h4>\n              <ul className=\"space-y-2 text-gray-400\">\n                <li>Email: info@realestate.com</li>\n                <li>Phone: +1 (555) 123-4567</li>\n                <li>Address: 123 Real Estate St.</li>\n              </ul>\n            </div>\n          </div>\n          \n          <div className=\"border-t border-gray-800 mt-8 pt-8 text-center text-gray-400\">\n            <p>&copy; 2024 RealEstate Platform. All rights reserved.</p>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Layout;\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AASA,MAAM,SAAS,CAAC,EAAE,QAAQ,EAAe;IACvC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,+HAAA,CAAA,UAAM;;;;;0BACP,6LAAC;gBAAK,WAAU;0BACb;;;;;;0BAIH,6LAAC;gBAAO,WAAU;0BAChB,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;;sDACC,6LAAC;4CAAG,WAAU;4CAAyB,OAAO;gDAAE,OAAO;4CAA4B;sDAAG;;;;;;sDAGtF,6LAAC;4CAAE,WAAU;sDAAgB;;;;;;;;;;;;8CAK/B,6LAAC;;sDACC,6LAAC;4CAAG,WAAU;sDAAqB;;;;;;sDACnC,6LAAC;4CAAG,WAAU;;8DACZ,6LAAC;8DAAG,cAAA,6LAAC;wDAAE,MAAK;wDAAI,WAAU;kEAAqC;;;;;;;;;;;8DAC/D,6LAAC;8DAAG,cAAA,6LAAC;wDAAE,MAAK;wDAAc,WAAU;kEAAqC;;;;;;;;;;;8DACzE,6LAAC;8DAAG,cAAA,6LAAC;wDAAE,MAAK;wDAAS,WAAU;kEAAqC;;;;;;;;;;;8DACpE,6LAAC;8DAAG,cAAA,6LAAC;wDAAE,MAAK;wDAAW,WAAU;kEAAqC;;;;;;;;;;;;;;;;;;;;;;;8CAI1E,6LAAC;;sDACC,6LAAC;4CAAG,WAAU;sDAAqB;;;;;;sDACnC,6LAAC;4CAAG,WAAU;;8DACZ,6LAAC;8DAAG,cAAA,6LAAC;wDAAE,MAAK;wDAAI,WAAU;kEAAqC;;;;;;;;;;;8DAC/D,6LAAC;8DAAG,cAAA,6LAAC;wDAAE,MAAK;wDAAI,WAAU;kEAAqC;;;;;;;;;;;8DAC/D,6LAAC;8DAAG,cAAA,6LAAC;wDAAE,MAAK;wDAAI,WAAU;kEAAqC;;;;;;;;;;;8DAC/D,6LAAC;8DAAG,cAAA,6LAAC;wDAAE,MAAK;wDAAI,WAAU;kEAAqC;;;;;;;;;;;;;;;;;;;;;;;8CAInE,6LAAC;;sDACC,6LAAC;4CAAG,WAAU;sDAAqB;;;;;;sDACnC,6LAAC;4CAAG,WAAU;;8DACZ,6LAAC;8DAAG;;;;;;8DACJ,6LAAC;8DAAG;;;;;;8DACJ,6LAAC;8DAAG;;;;;;;;;;;;;;;;;;;;;;;;sCAKV,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;0CAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMf;KA1DM;uCA4DS","debugId":null}},
    {"offset": {"line": 671, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/db.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined\n}\n\nexport const prisma =\n  globalForPrisma.prisma ??\n  new PrismaClient({\n    log: ['query'],\n  })\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma\n"],"names":[],"mappings":";;;AAYI;AAZJ;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SACX,gBAAgB,MAAM,IACtB,IAAI,yJAAA,CAAA,eAAY,CAAC;IACf,KAAK;QAAC;KAAQ;AAChB;AAEF,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 693, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/visitService.ts"],"sourcesContent":["import { Visit, VisitFormData, VisitScheduleSlot, VisitSearchParams } from '@/types/visit';\nimport { prisma } from '@/lib/db';\nimport { VisitStatus } from '@prisma/client';\n\nexport const visitService = {\n  // Create a new visit\n  async createVisit(propertyId: string, userId: string, visitData: VisitFormData): Promise<Visit> {\n    try {\n      const visit = await prisma.visit.create({\n        data: {\n          propertyId,\n          userId,\n          dateTime: visitData.dateTime,\n          notes: visitData.notes,\n          status: 'pending',\n        },\n        include: {\n          property: {\n            select: {\n              id: true,\n              title: true,\n            },\n          },\n          user: {\n            select: {\n              id: true,\n              name: true,\n              email: true,\n            },\n          },\n        },\n      });\n\n      return {\n        id: visit.id,\n        propertyId: visit.propertyId,\n        userId: visit.userId,\n        dateTime: visit.dateTime,\n        status: visit.status,\n        notes: visit.notes || undefined,\n        createdAt: visit.createdAt,\n        updatedAt: visit.updatedAt,\n        property: visit.property,\n        user: visit.user ? {\n          id: visit.user.id,\n          name: visit.user.name || undefined,\n          email: visit.user.email,\n        } : undefined,\n      };\n    } catch (error) {\n      console.error('Error creating visit:', error);\n      throw new Error('Failed to schedule visit');\n    }\n  },\n\n  // Get all visits with optional filtering\n  async getVisits(params?: VisitSearchParams): Promise<Visit[]> {\n    try {\n      const where: any = {};\n\n      if (params?.filters) {\n        const { status, propertyId, dateFrom, dateTo } = params.filters;\n\n        if (status) {\n          where.status = status;\n        }\n\n        if (propertyId) {\n          where.propertyId = propertyId;\n        }\n\n        if (dateFrom || dateTo) {\n          where.dateTime = {};\n          if (dateFrom) {\n            where.dateTime.gte = dateFrom;\n          }\n          if (dateTo) {\n            where.dateTime.lte = dateTo;\n          }\n        }\n      }\n\n      // Build orderBy clause\n      const orderBy: any = {};\n      if (params?.sortBy) {\n        if (params.sortBy === 'scheduledDate') {\n          orderBy.dateTime = params.sortOrder || 'asc';\n        } else {\n          orderBy[params.sortBy] = params.sortOrder || 'asc';\n        }\n      } else {\n        orderBy.dateTime = 'desc';\n      }\n\n      // Pagination\n      const skip = params?.page && params?.limit ? (params.page - 1) * params.limit : undefined;\n      const take = params?.limit;\n\n      const visits = await prisma.visit.findMany({\n        where,\n        include: {\n          property: {\n            select: {\n              id: true,\n              title: true,\n            },\n          },\n          user: {\n            select: {\n              id: true,\n              name: true,\n              email: true,\n            },\n          },\n        },\n        orderBy,\n        skip,\n        take,\n      });\n\n      return visits.map(visit => ({\n        id: visit.id,\n        propertyId: visit.propertyId,\n        userId: visit.userId,\n        dateTime: visit.dateTime,\n        status: visit.status,\n        notes: visit.notes || undefined,\n        createdAt: visit.createdAt,\n        updatedAt: visit.updatedAt,\n        property: visit.property,\n        user: visit.user ? {\n          id: visit.user.id,\n          name: visit.user.name || undefined,\n          email: visit.user.email,\n        } : undefined,\n      }));\n    } catch (error) {\n      console.error('Error fetching visits:', error);\n      throw new Error('Failed to fetch visits');\n    }\n  },\n\n  // Get visits for a specific property\n  async getVisitsByProperty(propertyId: string): Promise<Visit[]> {\n    try {\n      const visits = await prisma.visit.findMany({\n        where: { propertyId },\n        include: {\n          property: {\n            select: {\n              id: true,\n              title: true,\n            },\n          },\n          user: {\n            select: {\n              id: true,\n              name: true,\n              email: true,\n            },\n          },\n        },\n        orderBy: { dateTime: 'asc' },\n      });\n\n      return visits.map(visit => ({\n        id: visit.id,\n        propertyId: visit.propertyId,\n        userId: visit.userId,\n        dateTime: visit.dateTime,\n        status: visit.status,\n        notes: visit.notes || undefined,\n        createdAt: visit.createdAt,\n        updatedAt: visit.updatedAt,\n        property: visit.property,\n        user: visit.user ? {\n          id: visit.user.id,\n          name: visit.user.name || undefined,\n          email: visit.user.email,\n        } : undefined,\n      }));\n    } catch (error) {\n      console.error('Error fetching visits for property:', error);\n      throw new Error('Failed to fetch property visits');\n    }\n  },\n\n  // Get visits for a specific user\n  async getVisitsByUser(userId: string): Promise<Visit[]> {\n    try {\n      const visits = await prisma.visit.findMany({\n        where: { userId },\n        include: {\n          property: {\n            select: {\n              id: true,\n              title: true,\n            },\n          },\n          user: {\n            select: {\n              id: true,\n              name: true,\n              email: true,\n            },\n          },\n        },\n        orderBy: { dateTime: 'desc' },\n      });\n\n      return visits.map(visit => ({\n        id: visit.id,\n        propertyId: visit.propertyId,\n        userId: visit.userId,\n        dateTime: visit.dateTime,\n        status: visit.status,\n        notes: visit.notes || undefined,\n        createdAt: visit.createdAt,\n        updatedAt: visit.updatedAt,\n        property: visit.property,\n        user: visit.user ? {\n          id: visit.user.id,\n          name: visit.user.name || undefined,\n          email: visit.user.email,\n        } : undefined,\n      }));\n    } catch (error) {\n      console.error('Error fetching visits for user:', error);\n      throw new Error('Failed to fetch user visits');\n    }\n  },\n\n  // Get a specific visit by ID\n  async getVisitById(id: string): Promise<Visit | null> {\n    try {\n      const visit = await prisma.visit.findUnique({\n        where: { id },\n        include: {\n          property: {\n            select: {\n              id: true,\n              title: true,\n            },\n          },\n          user: {\n            select: {\n              id: true,\n              name: true,\n              email: true,\n            },\n          },\n        },\n      });\n\n      if (!visit) return null;\n\n      return {\n        id: visit.id,\n        propertyId: visit.propertyId,\n        userId: visit.userId,\n        dateTime: visit.dateTime,\n        status: visit.status,\n        notes: visit.notes || undefined,\n        createdAt: visit.createdAt,\n        updatedAt: visit.updatedAt,\n        property: visit.property,\n        user: visit.user ? {\n          id: visit.user.id,\n          name: visit.user.name || undefined,\n          email: visit.user.email,\n        } : undefined,\n      };\n    } catch (error) {\n      console.error('Error fetching visit:', error);\n      throw new Error('Failed to fetch visit');\n    }\n  },\n\n  // Update visit status\n  async updateVisitStatus(id: string, status: VisitStatus): Promise<Visit | null> {\n    try {\n      const visit = await prisma.visit.update({\n        where: { id },\n        data: { status },\n        include: {\n          property: {\n            select: {\n              id: true,\n              title: true,\n            },\n          },\n          user: {\n            select: {\n              id: true,\n              name: true,\n              email: true,\n            },\n          },\n        },\n      });\n\n      return {\n        id: visit.id,\n        propertyId: visit.propertyId,\n        userId: visit.userId,\n        dateTime: visit.dateTime,\n        status: visit.status,\n        notes: visit.notes || undefined,\n        createdAt: visit.createdAt,\n        updatedAt: visit.updatedAt,\n        property: visit.property,\n        user: visit.user ? {\n          id: visit.user.id,\n          name: visit.user.name || undefined,\n          email: visit.user.email,\n        } : undefined,\n      };\n    } catch (error) {\n      console.error('Error updating visit status:', error);\n      throw new Error('Failed to update visit status');\n    }\n  },\n\n  // Cancel a visit\n  async cancelVisit(id: string): Promise<boolean> {\n    try {\n      const visit = await this.updateVisitStatus(id, 'cancelled');\n      return visit !== null;\n    } catch (error) {\n      console.error('Error cancelling visit:', error);\n      throw new Error('Failed to cancel visit');\n    }\n  },\n\n  // Get available time slots for a specific date\n  async getAvailableSlots(propertyId: string, date: Date): Promise<VisitScheduleSlot[]> {\n    try {\n      // Define available time slots (9 AM to 6 PM, every hour)\n      const timeSlots = [\n        '09:00', '10:00', '11:00', '12:00', '13:00', \n        '14:00', '15:00', '16:00', '17:00', '18:00'\n      ];\n\n      const startOfDay = new Date(date);\n      startOfDay.setHours(0, 0, 0, 0);\n      \n      const endOfDay = new Date(date);\n      endOfDay.setHours(23, 59, 59, 999);\n\n      // Get existing visits for this property and date\n      const existingVisits = await prisma.visit.findMany({\n        where: {\n          propertyId,\n          dateTime: {\n            gte: startOfDay,\n            lte: endOfDay,\n          },\n          status: {\n            not: 'cancelled',\n          },\n        },\n      });\n\n      const bookedTimes = existingVisits.map(visit => {\n        const hour = visit.dateTime.getHours();\n        return `${hour.toString().padStart(2, '0')}:00`;\n      });\n\n      const dateString = date.toISOString().split('T')[0];\n\n      return timeSlots.map(time => ({\n        date: dateString,\n        time,\n        available: !bookedTimes.includes(time)\n      }));\n    } catch (error) {\n      console.error('Error fetching available slots:', error);\n      throw new Error('Failed to fetch available time slots');\n    }\n  },\n\n  // Get visit statistics\n  async getVisitStats(): Promise<{\n    total: number;\n    pending: number;\n    confirmed: number;\n    completed: number;\n    cancelled: number;\n  }> {\n    try {\n      const [total, pending, confirmed, completed, cancelled] = await Promise.all([\n        prisma.visit.count(),\n        prisma.visit.count({ where: { status: 'pending' } }),\n        prisma.visit.count({ where: { status: 'confirmed' } }),\n        prisma.visit.count({ where: { status: 'completed' } }),\n        prisma.visit.count({ where: { status: 'cancelled' } }),\n      ]);\n\n      return {\n        total,\n        pending,\n        confirmed,\n        completed,\n        cancelled,\n      };\n    } catch (error) {\n      console.error('Error fetching visit statistics:', error);\n      throw new Error('Failed to fetch visit statistics');\n    }\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1117, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/VisitScheduler.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useLanguage } from '@/context/LanguageContext';\nimport { visitService } from '@/lib/visitService';\nimport { VisitFormData, VisitScheduleSlot } from '@/types/visit';\nimport { Property } from '@/types/property';\n\ninterface VisitSchedulerProps {\n  property: Property;\n  onVisitScheduled?: (success: boolean) => void;\n}\n\nexport default function VisitScheduler({ property, onVisitScheduled }: VisitSchedulerProps) {\n  const { t } = useLanguage();\n  const [selectedDate, setSelectedDate] = useState<Date | null>(null);\n  const [availableSlots, setAvailableSlots] = useState<VisitScheduleSlot[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [showForm, setShowForm] = useState(false);\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  const [formData, setFormData] = useState<VisitFormData>({\n    visitorName: '',\n    visitorEmail: '',\n    visitorPhone: '',\n    scheduledDate: new Date(),\n    scheduledTime: '',\n    notes: ''\n  });\n\n  // Get minimum date (tomorrow)\n  const getMinDate = () => {\n    const tomorrow = new Date();\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    return tomorrow.toISOString().split('T')[0];\n  };\n\n  // Load available slots when date changes\n  useEffect(() => {\n    if (selectedDate) {\n      loadAvailableSlots(selectedDate);\n    }\n  }, [selectedDate]);\n\n  const loadAvailableSlots = async (date: Date) => {\n    try {\n      setLoading(true);\n      const slots = await visitService.getAvailableSlots(property.id, date);\n      setAvailableSlots(slots);\n    } catch (error) {\n      console.error('Error loading available slots:', error);\n      setAvailableSlots([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDateChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const dateValue = e.target.value;\n    if (dateValue) {\n      // Create date in local timezone to avoid timezone issues\n      const [year, month, day] = dateValue.split('-').map(Number);\n      const date = new Date(year, month - 1, day);\n      setSelectedDate(date);\n      setFormData(prev => ({ ...prev, scheduledDate: date, scheduledTime: '' }));\n      setShowForm(false);\n    }\n  };\n\n  const handleTimeSelect = (time: string) => {\n    setFormData(prev => ({ ...prev, scheduledTime: time }));\n    setShowForm(true);\n  };\n\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.visitorName.trim()) {\n      newErrors.visitorName = t('visit_form_validation.name_required');\n    }\n\n    if (!formData.visitorEmail.trim()) {\n      newErrors.visitorEmail = t('visit_form_validation.email_required');\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.visitorEmail)) {\n      newErrors.visitorEmail = t('visit_form_validation.email_invalid');\n    }\n\n    if (!formData.visitorPhone.trim()) {\n      newErrors.visitorPhone = t('visit_form_validation.phone_required');\n    }\n\n    if (!selectedDate) {\n      newErrors.date = t('visit_form_validation.date_required');\n    }\n\n    if (!formData.scheduledTime) {\n      newErrors.time = t('visit_form_validation.time_required');\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    try {\n      setSubmitting(true);\n      await visitService.createVisit(property.id, formData);\n      \n      // Reset form\n      setFormData({\n        visitorName: '',\n        visitorEmail: '',\n        visitorPhone: '',\n        scheduledDate: new Date(),\n        scheduledTime: '',\n        notes: ''\n      });\n      setSelectedDate(null);\n      setShowForm(false);\n      setAvailableSlots([]);\n      \n      onVisitScheduled?.(true);\n      alert(t('visit_request_sent'));\n    } catch (error) {\n      console.error('Error scheduling visit:', error);\n      onVisitScheduled?.(false);\n      alert(t('visit_request_failed'));\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const handleInputChange = (field: keyof VisitFormData, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: '' }));\n    }\n  };\n\n  // Don't show scheduler for free listings\n  if (property.serviceType === 'free') {\n    return (\n      <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-6 text-center\">\n        <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">\n          {t('premium_only_feature')}\n        </h3>\n        <p className=\"text-gray-600 mb-4\">\n          {t('contact_for_free_listing')}\n        </p>\n        <div className=\"bg-white border border-gray-200 rounded-lg p-4\">\n          <h4 className=\"font-medium text-gray-800 mb-2\">{t('contact_owner')}</h4>\n          <p className=\"text-sm text-gray-600\">\n            <strong>{t('full_name')}:</strong> {property.ownerName}\n          </p>\n          <p className=\"text-sm text-gray-600\">\n            <strong>{t('email')}:</strong> {property.ownerEmail}\n          </p>\n          <p className=\"text-sm text-gray-600\">\n            <strong>{t('phone')}:</strong> {property.ownerPhone}\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n      <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">\n        {t('visit_scheduling')}\n      </h3>\n      \n      <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6\">\n        <p className=\"text-blue-800 text-sm\">\n          {t('premium_visit_info')}\n        </p>\n      </div>\n\n      {/* Date Selection */}\n      <div className=\"mb-6\">\n        <label htmlFor=\"visit-date\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n          {t('select_date')}\n        </label>\n        <input\n          id=\"visit-date\"\n          type=\"date\"\n          min={getMinDate()}\n          value={selectedDate ? `${selectedDate.getFullYear()}-${String(selectedDate.getMonth() + 1).padStart(2, '0')}-${String(selectedDate.getDate()).padStart(2, '0')}` : ''}\n          onChange={handleDateChange}\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n        />\n        {errors.date && (\n          <p className=\"text-red-600 text-sm mt-1\">{errors.date}</p>\n        )}\n      </div>\n\n      {/* Time Slots */}\n      {selectedDate && (\n        <div className=\"mb-6\">\n          <h4 className=\"text-sm font-medium text-gray-700 mb-3\">\n            {t('available_times')}\n          </h4>\n          \n          {loading ? (\n            <div className=\"text-center py-4\">\n              <p className=\"text-gray-500\">{t('loading')}</p>\n            </div>\n          ) : availableSlots.length === 0 ? (\n            <p className=\"text-gray-500 text-center py-4\">\n              {t('no_available_times')}\n            </p>\n          ) : (\n            <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-2\">\n              {availableSlots.map((slot) => (\n                <button\n                  key={slot.time}\n                  onClick={() => handleTimeSelect(slot.time)}\n                  disabled={!slot.available}\n                  className={`px-3 py-2 text-sm rounded-md border transition-colors ${\n                    slot.available\n                      ? formData.scheduledTime === slot.time\n                        ? 'bg-blue-600 text-white border-blue-600'\n                        : 'bg-white text-gray-700 border-gray-300 hover:bg-blue-50 hover:border-blue-300'\n                      : 'bg-gray-100 text-gray-400 border-gray-200 cursor-not-allowed'\n                  }`}\n                >\n                  {slot.time}\n                </button>\n              ))}\n            </div>\n          )}\n          \n          {errors.time && (\n            <p className=\"text-red-600 text-sm mt-2\">{errors.time}</p>\n          )}\n        </div>\n      )}\n\n      {/* Visit Form */}\n      {showForm && (\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <div className=\"border-t border-gray-200 pt-6\">\n            <h4 className=\"text-lg font-medium text-gray-800 mb-4\">\n              {t('visit_details')}\n            </h4>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label htmlFor=\"visitor-name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  {t('visitor_name')} *\n                </label>\n                <input\n                  id=\"visitor-name\"\n                  type=\"text\"\n                  value={formData.visitorName}\n                  onChange={(e) => handleInputChange('visitorName', e.target.value)}\n                  placeholder={t('enter_visitor_name')}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n                {errors.visitorName && (\n                  <p className=\"text-red-600 text-sm mt-1\">{errors.visitorName}</p>\n                )}\n              </div>\n\n              <div>\n                <label htmlFor=\"visitor-email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  {t('visitor_email')} *\n                </label>\n                <input\n                  id=\"visitor-email\"\n                  type=\"email\"\n                  value={formData.visitorEmail}\n                  onChange={(e) => handleInputChange('visitorEmail', e.target.value)}\n                  placeholder={t('enter_visitor_email')}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n                {errors.visitorEmail && (\n                  <p className=\"text-red-600 text-sm mt-1\">{errors.visitorEmail}</p>\n                )}\n              </div>\n\n              <div className=\"md:col-span-2\">\n                <label htmlFor=\"visitor-phone\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  {t('visitor_phone')} *\n                </label>\n                <input\n                  id=\"visitor-phone\"\n                  type=\"tel\"\n                  value={formData.visitorPhone}\n                  onChange={(e) => handleInputChange('visitorPhone', e.target.value)}\n                  placeholder={t('enter_visitor_phone')}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n                {errors.visitorPhone && (\n                  <p className=\"text-red-600 text-sm mt-1\">{errors.visitorPhone}</p>\n                )}\n              </div>\n\n              <div className=\"md:col-span-2\">\n                <label htmlFor=\"visit-notes\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  {t('visit_notes')}\n                </label>\n                <textarea\n                  id=\"visit-notes\"\n                  rows={3}\n                  value={formData.notes}\n                  onChange={(e) => handleInputChange('notes', e.target.value)}\n                  placeholder={t('optional_notes')}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n              </div>\n            </div>\n\n            <div className=\"flex gap-3 mt-6\">\n              <button\n                type=\"submit\"\n                disabled={submitting}\n                className=\"flex-1 bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n              >\n                {submitting ? t('loading') : t('confirm_visit')}\n              </button>\n              \n              <button\n                type=\"button\"\n                onClick={() => setShowForm(false)}\n                className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 transition-colors\"\n              >\n                {t('cancel')}\n              </button>\n            </div>\n          </div>\n        </form>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1734, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/propertyService.ts"],"sourcesContent":["import { Property, PropertyFormData, PropertySearchParams } from '@/types/property';\nimport { prisma } from '@/lib/db';\nimport { ListingType } from '@prisma/client';\n\nexport class PropertyService {\n  // Helper method to parse images from JSON\n  private static parseImages(images: any): string[] {\n    try {\n      if (!images) return [];\n      \n      // If it's already an array of strings, return it\n      if (Array.isArray(images) && images.every(img => typeof img === 'string')) {\n        return images;\n      }\n      \n      // If it's an array of objects with src property, extract src\n      if (Array.isArray(images) && images.every(img => typeof img === 'object' && img.src)) {\n        return images.map(img => img.src);\n      }\n      \n      // If it's a JSON string, parse it\n      if (typeof images === 'string') {\n        const parsed = JSON.parse(images);\n        if (Array.isArray(parsed)) {\n          if (parsed.every(img => typeof img === 'string')) {\n            return parsed;\n          }\n          if (parsed.every(img => typeof img === 'object' && img.src)) {\n            return parsed.map(img => img.src);\n          }\n        }\n      }\n      \n      return [];\n    } catch (error) {\n      console.error('Error parsing images:', error);\n      return [];\n    }\n  }\n\n  // Get all properties with optional search and filtering\n  static async getProperties(params?: PropertySearchParams): Promise<{\n    properties: Property[];\n    total: number;\n    page: number;\n    totalPages: number;\n  }> {\n    try {\n      const page = params?.page || 1;\n      const limit = params?.limit || 10;\n      const skip = (page - 1) * limit;\n\n      // Build where clause\n      const where: any = {\n        isActive: true,\n      };\n\n      // Apply search query\n      if (params?.query) {\n        const query = params.query.toLowerCase();\n        where.OR = [\n          { title: { contains: query, mode: 'insensitive' } },\n          { description: { contains: query, mode: 'insensitive' } },\n          { city: { contains: query, mode: 'insensitive' } },\n          { neighborhood: { contains: query, mode: 'insensitive' } },\n          { address: { contains: query, mode: 'insensitive' } },\n        ];\n      }\n\n      // Apply filters\n      if (params?.filters) {\n        const { filters } = params;\n        \n        if (filters.listingType) {\n          where.listingType = filters.listingType;\n        }\n        \n        if (filters.minPrice) {\n          where.price = { ...where.price, gte: filters.minPrice };\n        }\n        \n        if (filters.maxPrice) {\n          where.price = { ...where.price, lte: filters.maxPrice };\n        }\n        \n        if (filters.bedrooms) {\n          where.bedrooms = { gte: filters.bedrooms };\n        }\n        \n        if (filters.bathrooms) {\n          where.bathrooms = { gte: filters.bathrooms };\n        }\n        \n        if (filters.city) {\n          where.city = { contains: filters.city, mode: 'insensitive' };\n        }\n\n        if (filters.neighborhood) {\n          where.neighborhood = { contains: filters.neighborhood, mode: 'insensitive' };\n        }\n\n        if (filters.state) {\n          where.state = { contains: filters.state, mode: 'insensitive' };\n        }\n      }\n\n      // Build orderBy clause\n      const orderBy: any = {};\n      if (params?.sortBy) {\n        orderBy[params.sortBy] = params.sortOrder || 'asc';\n      } else {\n        orderBy.createdAt = 'desc';\n      }\n\n      // Execute queries\n      const [properties, total] = await Promise.all([\n        prisma.property.findMany({\n          where,\n          include: {\n            owner: {\n              select: {\n                id: true,\n                name: true,\n                email: true,\n              },\n            },\n          },\n          orderBy,\n          skip,\n          take: limit,\n        }),\n        prisma.property.count({ where }),\n      ]);\n\n      // Transform properties to match our interface\n      const transformedProperties: Property[] = properties.map(property => ({\n        id: property.id,\n        title: property.title,\n        description: property.description,\n        price: property.price || undefined,\n        address: property.address || undefined,\n        neighborhood: property.neighborhood || undefined,\n        city: property.city || undefined,\n        state: property.state || undefined,\n        zipCode: property.zipCode || undefined,\n        bedrooms: property.bedrooms || undefined,\n        bathrooms: property.bathrooms || undefined,\n        area: property.area || undefined,\n        images: this.parseImages(property.images),\n        listingType: property.listingType,\n        premiumInfo: property.premiumInfo || undefined,\n        isActive: property.isActive,\n        createdAt: property.createdAt,\n        updatedAt: property.updatedAt,\n        ownerId: property.ownerId,\n        owner: property.owner ? {\n          id: property.owner.id,\n          name: property.owner.name || undefined,\n          email: property.owner.email,\n        } : undefined,\n      }));\n\n      return {\n        properties: transformedProperties,\n        total,\n        page,\n        totalPages: Math.ceil(total / limit),\n      };\n    } catch (error) {\n      console.error('Error fetching properties:', error);\n      throw new Error('Failed to fetch properties');\n    }\n  }\n\n  // Get a single property by ID\n  static async getPropertyById(id: string): Promise<Property | null> {\n    try {\n      const property = await prisma.property.findUnique({\n        where: { id },\n        include: {\n          owner: {\n            select: {\n              id: true,\n              name: true,\n              email: true,\n            },\n          },\n        },\n      });\n\n      if (!property) return null;\n\n      return {\n        id: property.id,\n        title: property.title,\n        description: property.description,\n        price: property.price || undefined,\n        address: property.address || undefined,\n        neighborhood: property.neighborhood || undefined,\n        city: property.city || undefined,\n        state: property.state || undefined,\n        zipCode: property.zipCode || undefined,\n        bedrooms: property.bedrooms || undefined,\n        bathrooms: property.bathrooms || undefined,\n        area: property.area || undefined,\n        images: this.parseImages(property.images),\n        listingType: property.listingType,\n        premiumInfo: property.premiumInfo || undefined,\n        isActive: property.isActive,\n        createdAt: property.createdAt,\n        updatedAt: property.updatedAt,\n        ownerId: property.ownerId,\n        owner: property.owner ? {\n          id: property.owner.id,\n          name: property.owner.name || undefined,\n          email: property.owner.email,\n        } : undefined,\n      };\n    } catch (error) {\n      console.error('Error fetching property:', error);\n      throw new Error('Failed to fetch property');\n    }\n  }\n\n  // Create a new property\n  static async createProperty(data: PropertyFormData, ownerId: string): Promise<Property> {\n    try {\n      // In production, upload images to cloud storage and get URLs\n      const imageUrls = data.images.map((file: File) => URL.createObjectURL(file));\n\n      const property = await prisma.property.create({\n        data: {\n          title: data.title,\n          description: data.description,\n          price: data.price,\n          address: data.address,\n          neighborhood: data.neighborhood,\n          city: data.city,\n          state: data.state,\n          zipCode: data.zipCode,\n          bedrooms: data.bedrooms,\n          bathrooms: data.bathrooms,\n          area: data.area,\n          images: imageUrls,\n          listingType: data.listingType,\n          premiumInfo: data.premiumInfo,\n          ownerId,\n        },\n        include: {\n          owner: {\n            select: {\n              id: true,\n              name: true,\n              email: true,\n            },\n          },\n        },\n      });\n\n      return {\n        id: property.id,\n        title: property.title,\n        description: property.description,\n        price: property.price || undefined,\n        address: property.address || undefined,\n        neighborhood: property.neighborhood || undefined,\n        city: property.city || undefined,\n        state: property.state || undefined,\n        zipCode: property.zipCode || undefined,\n        bedrooms: property.bedrooms || undefined,\n        bathrooms: property.bathrooms || undefined,\n        area: property.area || undefined,\n        images: this.parseImages(property.images),\n        listingType: property.listingType,\n        premiumInfo: property.premiumInfo || undefined,\n        isActive: property.isActive,\n        createdAt: property.createdAt,\n        updatedAt: property.updatedAt,\n        ownerId: property.ownerId,\n        owner: property.owner ? {\n          id: property.owner.id,\n          name: property.owner.name || undefined,\n          email: property.owner.email,\n        } : undefined,\n      };\n    } catch (error) {\n      console.error('Error creating property:', error);\n      throw new Error('Failed to create property');\n    }\n  }\n\n  // Update an existing property\n  static async updateProperty(id: string, data: Partial<PropertyFormData>): Promise<Property | null> {\n    try {\n      // Handle image conversion if images are provided\n      const updateData: any = {\n        title: data.title,\n        description: data.description,\n        price: data.price,\n        address: data.address,\n        neighborhood: data.neighborhood,\n        city: data.city,\n        state: data.state,\n        zipCode: data.zipCode,\n        bedrooms: data.bedrooms,\n        bathrooms: data.bathrooms,\n        area: data.area,\n        listingType: data.listingType,\n        premiumInfo: data.premiumInfo,\n      };\n\n      // Remove undefined values\n      Object.keys(updateData).forEach(key => {\n        if (updateData[key] === undefined) {\n          delete updateData[key];\n        }\n      });\n\n      if (data.images && data.images.length > 0) {\n        updateData.images = data.images.map((file: File) => URL.createObjectURL(file));\n      }\n\n      const property = await prisma.property.update({\n        where: { id },\n        data: updateData,\n        include: {\n          owner: {\n            select: {\n              id: true,\n              name: true,\n              email: true,\n            },\n          },\n        },\n      });\n\n      return {\n        id: property.id,\n        title: property.title,\n        description: property.description,\n        price: property.price || undefined,\n        address: property.address || undefined,\n        neighborhood: property.neighborhood || undefined,\n        city: property.city || undefined,\n        state: property.state || undefined,\n        zipCode: property.zipCode || undefined,\n        bedrooms: property.bedrooms || undefined,\n        bathrooms: property.bathrooms || undefined,\n        area: property.area || undefined,\n        images: this.parseImages(property.images),\n        listingType: property.listingType,\n        premiumInfo: property.premiumInfo || undefined,\n        isActive: property.isActive,\n        createdAt: property.createdAt,\n        updatedAt: property.updatedAt,\n        ownerId: property.ownerId,\n        owner: property.owner ? {\n          id: property.owner.id,\n          name: property.owner.name || undefined,\n          email: property.owner.email,\n        } : undefined,\n      };\n    } catch (error) {\n      console.error('Error updating property:', error);\n      throw new Error('Failed to update property');\n    }\n  }\n\n  // Delete a property\n  static async deleteProperty(id: string): Promise<boolean> {\n    try {\n      await prisma.property.update({\n        where: { id },\n        data: { isActive: false },\n      });\n      return true;\n    } catch (error) {\n      console.error('Error deleting property:', error);\n      return false;\n    }\n  }\n\n  // Get featured properties (for homepage)\n  static async getFeaturedProperties(limit: number = 6): Promise<Property[]> {\n    try {\n      const properties = await prisma.property.findMany({\n        where: { isActive: true },\n        include: {\n          owner: {\n            select: {\n              id: true,\n              name: true,\n              email: true,\n            },\n          },\n        },\n        orderBy: { createdAt: 'desc' },\n        take: limit,\n      });\n\n      return properties.map(property => ({\n        id: property.id,\n        title: property.title,\n        description: property.description,\n        price: property.price || undefined,\n        address: property.address || undefined,\n        neighborhood: property.neighborhood || undefined,\n        city: property.city || undefined,\n        state: property.state || undefined,\n        zipCode: property.zipCode || undefined,\n        bedrooms: property.bedrooms || undefined,\n        bathrooms: property.bathrooms || undefined,\n        area: property.area || undefined,\n        images: this.parseImages(property.images),\n        listingType: property.listingType,\n        premiumInfo: property.premiumInfo || undefined,\n        isActive: property.isActive,\n        createdAt: property.createdAt,\n        updatedAt: property.updatedAt,\n        ownerId: property.ownerId,\n        owner: property.owner ? {\n          id: property.owner.id,\n          name: property.owner.name || undefined,\n          email: property.owner.email,\n        } : undefined,\n      }));\n    } catch (error) {\n      console.error('Error fetching featured properties:', error);\n      throw new Error('Failed to fetch featured properties');\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2195, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/properties/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'next/navigation';\nimport Layout from '@/components/Layout';\nimport VisitScheduler from '@/components/VisitScheduler';\nimport { useLanguage } from '@/context/LanguageContext';\nimport { Property } from '@/types/property';\nimport { PropertyService } from '@/lib/propertyService';\nimport Link from 'next/link';\n\nconst PropertyDetailsPage = () => {\n  const params = useParams();\n  const { t } = useLanguage();\n  const [property, setProperty] = useState<Property | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n\n  useEffect(() => {\n    const loadProperty = async () => {\n      if (!params.id) return;\n      \n      setLoading(true);\n      try {\n        const propertyData = await PropertyService.getPropertyById(params.id as string);\n        if (propertyData) {\n          setProperty(propertyData);\n        } else {\n          setError(t('not_found'));\n        }\n      } catch (err) {\n        setError('Error loading property');\n        console.error('Error loading property:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadProperty();\n  }, [params.id, t]);\n\n  const formatPrice = (price: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(price);\n  };\n\n  const nextImage = () => {\n    if (property && property.images.length > 1) {\n      setCurrentImageIndex((prev) => (prev + 1) % property.images.length);\n    }\n  };\n\n  const prevImage = () => {\n    if (property && property.images.length > 1) {\n      setCurrentImageIndex((prev) => (prev - 1 + property.images.length) % property.images.length);\n    }\n  };\n\n  if (loading) {\n    return (\n      <Layout>\n        <div className=\"re-container py-12\">\n          <div className=\"text-center\">\n            <div className=\"text-xl text-gray-600\">{t('loading')}</div>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n\n  if (error || !property) {\n    return (\n      <Layout>\n        <div className=\"re-container py-12\">\n          <div className=\"text-center\">\n            <div className=\"text-xl re-error-message\">{error || t('not_found')}</div>\n            <Link href=\"/properties\" className=\"re-btn re-btn-primary mt-4 inline-block\">\n              {t('back_to_properties')}\n            </Link>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout>\n      <div className=\"bg-white\">\n        <div className=\"re-container py-8\">\n          {/* Breadcrumb */}\n          <nav className=\"mb-8\">\n            <div className=\"flex items-center space-x-2 text-gray-500\">\n              <Link href=\"/\" className=\"hover:text-gray-700\">{t('home')}</Link>\n              <span>/</span>\n              <Link href=\"/properties\" className=\"hover:text-gray-700\">{t('properties')}</Link>\n              <span>/</span>\n              <span className=\"text-gray-900\">{property.title}</span>\n            </div>\n          </nav>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-12\">\n            {/* Left Column - Images and Details */}\n            <div className=\"lg:col-span-2\">\n              {/* Image Gallery */}\n              <div className=\"mb-8\">\n                <div className=\"relative\">\n                  <img\n                    src={property.images[currentImageIndex] || \"https://storage.googleapis.com/workspace-0f70711f-8b4e-4d94-86f1-2a93ccde5887/image/43c4603b-948d-41e3-8da5-cba0d9bd5e4e.png\"}\n                    alt={`${property.title} - Image ${currentImageIndex + 1}`}\n                    className=\"w-full h-96 object-cover rounded-lg\"\n                    onError={(e) => {\n                      (e.target as HTMLImageElement).src = \"https://storage.googleapis.com/workspace-0f70711f-8b4e-4d94-86f1-2a93ccde5887/image/176e10fa-788b-4f0e-abb2-e045cd64cb06.png\";\n                    }}\n                  />\n                  \n                  {/* Image Navigation */}\n                  {property.images.length > 1 && (\n                    <>\n                      <button\n                        onClick={prevImage}\n                        className=\"absolute left-4 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white p-2 rounded-full hover:bg-opacity-75\"\n                      >\n                        ←\n                      </button>\n                      <button\n                        onClick={nextImage}\n                        className=\"absolute right-4 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white p-2 rounded-full hover:bg-opacity-75\"\n                      >\n                        →\n                      </button>\n                    </>\n                  )}\n\n                  {/* Service Type Badge */}\n                  <div className=\"absolute top-4 left-4\">\n                    <span \n                      className={`px-3 py-1 rounded-full text-sm font-medium text-white ${\n                        property.serviceType === 'premium' \n                          ? 'bg-blue-600' \n                          : 'bg-green-600'\n                      }`}\n                    >\n                      {property.serviceType === 'premium' ? t('premium_listing') : t('free_listing')}\n                    </span>\n                  </div>\n\n                  {/* Listing Type Badge */}\n                  <div className=\"absolute top-4 right-4\">\n                    <span className=\"px-3 py-1 rounded-full text-sm font-medium bg-gray-900 text-white\">\n                      {property.listingType === 'for_sale' ? t('for_sale') : t('for_rent')}\n                    </span>\n                  </div>\n                </div>\n\n                {/* Image Thumbnails */}\n                {property.images.length > 1 && (\n                  <div className=\"flex space-x-2 mt-4 overflow-x-auto\">\n                    {property.images.map((image, index) => (\n                      <button\n                        key={index}\n                        onClick={() => setCurrentImageIndex(index)}\n                        className={`flex-shrink-0 w-20 h-20 rounded-lg overflow-hidden border-2 ${\n                          currentImageIndex === index ? 'border-blue-500' : 'border-gray-300'\n                        }`}\n                      >\n                        <img\n                          src={image}\n                          alt={`Thumbnail ${index + 1}`}\n                          className=\"w-full h-full object-cover\"\n                          onError={(e) => {\n                            (e.target as HTMLImageElement).src = \"https://storage.googleapis.com/workspace-0f70711f-8b4e-4d94-86f1-2a93ccde5887/image/3fea4e4c-ee87-4614-94bd-7f76760cf700.png\";\n                          }}\n                        />\n                      </button>\n                    ))}\n                  </div>\n                )}\n              </div>\n\n              {/* Property Details */}\n              <div>\n                <h1 className=\"text-4xl font-bold mb-4\" style={{ color: 'var(--re-primary-color)' }}>\n                  {property.title}\n                </h1>\n                \n                <div className=\"flex items-center text-gray-600 mb-6\">\n                  <span className=\"text-lg\">📍 {property.location}</span>\n                </div>\n\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\">\n                  <div className=\"text-center p-4 bg-gray-50 rounded-lg\">\n                    <div className=\"text-2xl font-bold\" style={{ color: 'var(--re-primary-color)' }}>\n                      {property.bedrooms}\n                    </div>\n                    <div className=\"text-gray-600\">{t('bedrooms')}</div>\n                  </div>\n                  <div className=\"text-center p-4 bg-gray-50 rounded-lg\">\n                    <div className=\"text-2xl font-bold\" style={{ color: 'var(--re-primary-color)' }}>\n                      {property.bathrooms}\n                    </div>\n                    <div className=\"text-gray-600\">{t('bathrooms')}</div>\n                  </div>\n                  <div className=\"text-center p-4 bg-gray-50 rounded-lg\">\n                    <div className=\"text-2xl font-bold\" style={{ color: 'var(--re-primary-color)' }}>\n                      {property.squareFeet.toLocaleString()}\n                    </div>\n                    <div className=\"text-gray-600\">{t('square_feet')}</div>\n                  </div>\n                  <div className=\"text-center p-4 bg-gray-50 rounded-lg\">\n                    <div className=\"text-2xl font-bold\" style={{ color: 'var(--re-primary-color)' }}>\n                      {t(property.propertyType)}\n                    </div>\n                    <div className=\"text-gray-600\">{t('property_type')}</div>\n                  </div>\n                </div>\n\n                <div className=\"mb-8\">\n                  <h2 className=\"text-2xl font-bold mb-4\">{t('description')}</h2>\n                  <p className=\"text-gray-700 leading-relaxed\">{property.description}</p>\n                </div>\n\n                {/* Features */}\n                {property.features && property.features.length > 0 && (\n                  <div className=\"mb-8\">\n                    <h2 className=\"text-2xl font-bold mb-4\">{t('features')}</h2>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\n                      {property.features.map((feature, index) => (\n                        <div key={index} className=\"flex items-center\">\n                          <span className=\"w-2 h-2 rounded-full mr-3\" style={{ backgroundColor: 'var(--re-success-color)' }}></span>\n                          <span>{feature}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Right Column - Contact and Actions */}\n            <div className=\"lg:col-span-1\">\n              <div className=\"sticky top-8\">\n                {/* Price */}\n                <div className=\"re-card mb-6\">\n                  <div className=\"text-center\">\n                    <div className=\"text-4xl font-bold mb-2\" style={{ color: 'var(--re-primary-color)' }}>\n                      {formatPrice(property.price)}\n                    </div>\n                    <div className=\"text-gray-600\">\n                      {property.listingType === 'for_rent' ? t('per_month') : t('total_price')}\n                    </div>\n                  </div>\n                </div>\n\n                {/* Contact Information */}\n                <div className=\"re-card mb-6\">\n                  <h3 className=\"text-xl font-bold mb-4\">{t('contact_owner')}</h3>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <div className=\"font-medium\">{property.ownerName}</div>\n                    </div>\n                    <div>\n                      <div className=\"text-gray-600\">{t('email')}</div>\n                      <div>{property.ownerEmail}</div>\n                    </div>\n                    <div>\n                      <div className=\"text-gray-600\">{t('phone')}</div>\n                      <div>{property.ownerPhone}</div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Action Buttons */}\n                <div className=\"space-y-4\">\n                  <button className=\"re-btn re-btn-primary w-full\">\n                    {t('contact_seller')}\n                  </button>\n                  \n                  <Link \n                    href=\"/properties\" \n                    className=\"re-btn bg-gray-200 text-gray-800 hover:bg-gray-300 w-full text-center inline-block\"\n                  >\n                    {t('back_to_properties')}\n                  </Link>\n                </div>\n\n                {/* Visit Scheduler */}\n                <div className=\"mt-6\">\n                  <VisitScheduler \n                    property={property}\n                    onVisitScheduled={(success) => {\n                      if (success) {\n                        console.log('Visit scheduled successfully');\n                      }\n                    }}\n                  />\n                </div>\n\n                {/* Service Information */}\n                <div className=\"re-card mt-6\">\n                  <h3 className=\"text-lg font-bold mb-3\">{t('service_information')}</h3>\n                  {property.serviceType === 'premium' ? (\n                    <div>\n                      <div className=\"text-blue-600 font-medium mb-2\">{t('premium_service')}</div>\n                      <p className=\"text-sm text-gray-600\">\n                        {t('premium_service_info')}\n                      </p>\n                    </div>\n                  ) : (\n                    <div>\n                      <div className=\"text-green-600 font-medium mb-2\">{t('free_listing_service')}</div>\n                      <p className=\"text-sm text-gray-600\">\n                        {t('free_listing_info')}\n                      </p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default PropertyDetailsPage;\n"],"names":[],"mappings":"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","debugId":null}}]
}