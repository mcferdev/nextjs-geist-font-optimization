{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/Header.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport { useLanguage } from '@/context/LanguageContext';\nimport { useAuth } from '@/context/AuthContext';\n\nconst Header = () => {\n  const { t, locale, switchLanguage } = useLanguage();\n  const { user, signOut, loading } = useAuth();\n  const [showUserMenu, setShowUserMenu] = useState(false);\n\n  const handleSignOut = async () => {\n    await signOut();\n    setShowUserMenu(false);\n  };\n\n  return (\n    <header className=\"bg-white shadow-sm border-b border-gray-200\">\n      <div className=\"re-container\">\n        <nav className=\"flex justify-between items-center py-4\">\n          {/* Logo and main navigation */}\n          <div className=\"flex items-center space-x-8\">\n            <Link href=\"/\" className=\"text-2xl font-bold\" style={{ color: 'var(--re-primary-color)' }}>\n              RealEstate\n            </Link>\n            \n            <div className=\"hidden md:flex space-x-6\">\n              <Link \n                href=\"/\" \n                className=\"text-gray-700 hover:text-gray-900 font-medium transition-colors\"\n              >\n                {t('home')}\n              </Link>\n              <Link \n                href=\"/properties\" \n                className=\"text-gray-700 hover:text-gray-900 font-medium transition-colors\"\n              >\n                {t('browse_listings')}\n              </Link>\n              {user && (\n                <Link \n                  href=\"/dashboard\" \n                  className=\"text-gray-700 hover:text-gray-900 font-medium transition-colors\"\n                >\n                  {t('dashboard')}\n                </Link>\n              )}\n            </div>\n          </div>\n\n          {/* Right side - Authentication, CTA and Language selector */}\n          <div className=\"flex items-center space-x-4\">\n            {user ? (\n              <>\n                <Link \n                  href=\"/properties/new\" \n                  className=\"re-btn re-btn-primary\"\n                >\n                  {t('list_property')}\n                </Link>\n                \n                {/* User Menu */}\n                <div className=\"relative\">\n                  <button\n                    onClick={() => setShowUserMenu(!showUserMenu)}\n                    className=\"flex items-center space-x-2 text-gray-700 hover:text-gray-900 font-medium\"\n                  >\n                    <div className=\"w-8 h-8 bg-gray-300 rounded-full flex items-center justify-center\">\n                      {user.image ? (\n                        <img src={user.image} alt={user.name} className=\"w-8 h-8 rounded-full\" />\n                      ) : (\n                        <span className=\"text-sm font-medium\">{user.name.charAt(0).toUpperCase()}</span>\n                      )}\n                    </div>\n                    <span className=\"hidden sm:block\">{user.name}</span>\n                  </button>\n                  \n                  {showUserMenu && (\n                    <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1 z-50 border\">\n                      <Link\n                        href=\"/dashboard\"\n                        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                        onClick={() => setShowUserMenu(false)}\n                      >\n                        {t('dashboard')}\n                      </Link>\n                      <Link\n                        href=\"/profile\"\n                        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                        onClick={() => setShowUserMenu(false)}\n                      >\n                        {t('auth.profile')}\n                      </Link>\n                      <Link\n                        href=\"/my-properties\"\n                        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                        onClick={() => setShowUserMenu(false)}\n                      >\n                        {t('auth.my_properties')}\n                      </Link>\n                      <Link\n                        href=\"/my-visits\"\n                        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                        onClick={() => setShowUserMenu(false)}\n                      >\n                        {t('auth.my_visits')}\n                      </Link>\n                      {user.role === 'admin' && (\n                        <Link\n                          href=\"/admin\"\n                          className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                          onClick={() => setShowUserMenu(false)}\n                        >\n                          {t('auth.admin_dashboard')}\n                        </Link>\n                      )}\n                      <hr className=\"my-1\" />\n                      <button\n                        onClick={handleSignOut}\n                        disabled={loading}\n                        className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 disabled:opacity-50\"\n                      >\n                        {loading ? t('auth.signing_out') : t('auth.sign_out')}\n                      </button>\n                    </div>\n                  )}\n                </div>\n              </>\n            ) : (\n              <>\n                <Link \n                  href=\"/auth/signin\" \n                  className=\"text-gray-700 hover:text-gray-900 font-medium\"\n                >\n                  {t('auth.sign_in')}\n                </Link>\n                <Link \n                  href=\"/auth/signup\" \n                  className=\"re-btn re-btn-primary\"\n                >\n                  {t('auth.sign_up')}\n                </Link>\n              </>\n            )}\n            \n            {/* Language Selector */}\n            <select\n              value={locale}\n              onChange={(e) => switchLanguage(e.target.value)}\n              className=\"px-3 py-2 border border-gray-300 rounded-md text-sm bg-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"pt-BR\">Português (Brasil)</option>\n              <option value=\"en\">English</option>\n              <option value=\"es\">Español</option>\n            </select>\n          </div>\n        </nav>\n\n        {/* Mobile menu button - for future implementation */}\n        <div className=\"md:hidden\">\n          {/* Mobile navigation can be added here later */}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/Layout.tsx"],"sourcesContent":["'use client';\n\nimport React, { ReactNode } from 'react';\nimport Header from './Header';\n\ninterface LayoutProps {\n  children: ReactNode;\n}\n\nconst Layout = ({ children }: LayoutProps) => {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header />\n      <main className=\"flex-1\">\n        {children}\n      </main>\n      \n      {/* Footer */}\n      <footer className=\"bg-gray-900 text-white py-12 mt-16\">\n        <div className=\"re-container\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n            <div>\n              <h3 className=\"text-xl font-bold mb-4\" style={{ color: 'var(--re-secondary-color)' }}>\n                RealEstate\n              </h3>\n              <p className=\"text-gray-400\">\n                Your trusted partner in finding the perfect home or selling your property.\n              </p>\n            </div>\n            \n            <div>\n              <h4 className=\"font-semibold mb-4\">Quick Links</h4>\n              <ul className=\"space-y-2 text-gray-400\">\n                <li><a href=\"/\" className=\"hover:text-white transition-colors\">Home</a></li>\n                <li><a href=\"/properties\" className=\"hover:text-white transition-colors\">Properties</a></li>\n                <li><a href=\"/about\" className=\"hover:text-white transition-colors\">About</a></li>\n                <li><a href=\"/contact\" className=\"hover:text-white transition-colors\">Contact</a></li>\n              </ul>\n            </div>\n            \n            <div>\n              <h4 className=\"font-semibold mb-4\">Services</h4>\n              <ul className=\"space-y-2 text-gray-400\">\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Free Listings</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Premium Service</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Property Valuation</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Legal Support</a></li>\n              </ul>\n            </div>\n            \n            <div>\n              <h4 className=\"font-semibold mb-4\">Contact Info</h4>\n              <ul className=\"space-y-2 text-gray-400\">\n                <li>Email: info@realestate.com</li>\n                <li>Phone: +1 (555) 123-4567</li>\n                <li>Address: 123 Real Estate St.</li>\n              </ul>\n            </div>\n          </div>\n          \n          <div className=\"border-t border-gray-800 mt-8 pt-8 text-center text-gray-400\">\n            <p>&copy; 2024 RealEstate Platform. All rights reserved.</p>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Layout;\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AASA,MAAM,SAAS,CAAC,EAAE,QAAQ,EAAe;IACvC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,+HAAA,CAAA,UAAM;;;;;0BACP,6LAAC;gBAAK,WAAU;0BACb;;;;;;0BAIH,6LAAC;gBAAO,WAAU;0BAChB,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;;sDACC,6LAAC;4CAAG,WAAU;4CAAyB,OAAO;gDAAE,OAAO;4CAA4B;sDAAG;;;;;;sDAGtF,6LAAC;4CAAE,WAAU;sDAAgB;;;;;;;;;;;;8CAK/B,6LAAC;;sDACC,6LAAC;4CAAG,WAAU;sDAAqB;;;;;;sDACnC,6LAAC;4CAAG,WAAU;;8DACZ,6LAAC;8DAAG,cAAA,6LAAC;wDAAE,MAAK;wDAAI,WAAU;kEAAqC;;;;;;;;;;;8DAC/D,6LAAC;8DAAG,cAAA,6LAAC;wDAAE,MAAK;wDAAc,WAAU;kEAAqC;;;;;;;;;;;8DACzE,6LAAC;8DAAG,cAAA,6LAAC;wDAAE,MAAK;wDAAS,WAAU;kEAAqC;;;;;;;;;;;8DACpE,6LAAC;8DAAG,cAAA,6LAAC;wDAAE,MAAK;wDAAW,WAAU;kEAAqC;;;;;;;;;;;;;;;;;;;;;;;8CAI1E,6LAAC;;sDACC,6LAAC;4CAAG,WAAU;sDAAqB;;;;;;sDACnC,6LAAC;4CAAG,WAAU;;8DACZ,6LAAC;8DAAG,cAAA,6LAAC;wDAAE,MAAK;wDAAI,WAAU;kEAAqC;;;;;;;;;;;8DAC/D,6LAAC;8DAAG,cAAA,6LAAC;wDAAE,MAAK;wDAAI,WAAU;kEAAqC;;;;;;;;;;;8DAC/D,6LAAC;8DAAG,cAAA,6LAAC;wDAAE,MAAK;wDAAI,WAAU;kEAAqC;;;;;;;;;;;8DAC/D,6LAAC;8DAAG,cAAA,6LAAC;wDAAE,MAAK;wDAAI,WAAU;kEAAqC;;;;;;;;;;;;;;;;;;;;;;;8CAInE,6LAAC;;sDACC,6LAAC;4CAAG,WAAU;sDAAqB;;;;;;sDACnC,6LAAC;4CAAG,WAAU;;8DACZ,6LAAC;8DAAG;;;;;;8DACJ,6LAAC;8DAAG;;;;;;8DACJ,6LAAC;8DAAG;;;;;;;;;;;;;;;;;;;;;;;;sCAKV,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;0CAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMf;KA1DM;uCA4DS","debugId":null}},
    {"offset": {"line": 671, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/db.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined\n}\n\nexport const prisma =\n  globalForPrisma.prisma ??\n  new PrismaClient({\n    log: ['query'],\n  })\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma\n"],"names":[],"mappings":";;;AAYI;AAZJ;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SACX,gBAAgB,MAAM,IACtB,IAAI,yJAAA,CAAA,eAAY,CAAC;IACf,KAAK;QAAC;KAAQ;AAChB;AAEF,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 693, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/propertyService.ts"],"sourcesContent":["import { Property, PropertyFormData, PropertySearchParams } from '@/types/property';\nimport { prisma } from '@/lib/db';\nimport { ListingType } from '@prisma/client';\n\nexport class PropertyService {\n  // Helper method to parse images from JSON\n  private static parseImages(images: any): string[] {\n    try {\n      if (!images) return [];\n      \n      // If it's already an array of strings, return it\n      if (Array.isArray(images) && images.every(img => typeof img === 'string')) {\n        return images;\n      }\n      \n      // If it's an array of objects with src property, extract src\n      if (Array.isArray(images) && images.every(img => typeof img === 'object' && img.src)) {\n        return images.map(img => img.src);\n      }\n      \n      // If it's a JSON string, parse it\n      if (typeof images === 'string') {\n        const parsed = JSON.parse(images);\n        if (Array.isArray(parsed)) {\n          if (parsed.every(img => typeof img === 'string')) {\n            return parsed;\n          }\n          if (parsed.every(img => typeof img === 'object' && img.src)) {\n            return parsed.map(img => img.src);\n          }\n        }\n      }\n      \n      return [];\n    } catch (error) {\n      console.error('Error parsing images:', error);\n      return [];\n    }\n  }\n\n  // Get all properties with optional search and filtering\n  static async getProperties(params?: PropertySearchParams): Promise<{\n    properties: Property[];\n    total: number;\n    page: number;\n    totalPages: number;\n  }> {\n    try {\n      const page = params?.page || 1;\n      const limit = params?.limit || 10;\n      const skip = (page - 1) * limit;\n\n      // Build where clause\n      const where: any = {\n        isActive: true,\n      };\n\n      // Apply search query\n      if (params?.query) {\n        const query = params.query.toLowerCase();\n        where.OR = [\n          { title: { contains: query, mode: 'insensitive' } },\n          { description: { contains: query, mode: 'insensitive' } },\n          { city: { contains: query, mode: 'insensitive' } },\n          { neighborhood: { contains: query, mode: 'insensitive' } },\n          { address: { contains: query, mode: 'insensitive' } },\n        ];\n      }\n\n      // Apply filters\n      if (params?.filters) {\n        const { filters } = params;\n        \n        if (filters.listingType) {\n          where.listingType = filters.listingType;\n        }\n        \n        if (filters.minPrice) {\n          where.price = { ...where.price, gte: filters.minPrice };\n        }\n        \n        if (filters.maxPrice) {\n          where.price = { ...where.price, lte: filters.maxPrice };\n        }\n        \n        if (filters.bedrooms) {\n          where.bedrooms = { gte: filters.bedrooms };\n        }\n        \n        if (filters.bathrooms) {\n          where.bathrooms = { gte: filters.bathrooms };\n        }\n        \n        if (filters.city) {\n          where.city = { contains: filters.city, mode: 'insensitive' };\n        }\n\n        if (filters.neighborhood) {\n          where.neighborhood = { contains: filters.neighborhood, mode: 'insensitive' };\n        }\n\n        if (filters.state) {\n          where.state = { contains: filters.state, mode: 'insensitive' };\n        }\n      }\n\n      // Build orderBy clause\n      const orderBy: any = {};\n      if (params?.sortBy) {\n        orderBy[params.sortBy] = params.sortOrder || 'asc';\n      } else {\n        orderBy.createdAt = 'desc';\n      }\n\n      // Execute queries\n      const [properties, total] = await Promise.all([\n        prisma.property.findMany({\n          where,\n          include: {\n            owner: {\n              select: {\n                id: true,\n                name: true,\n                email: true,\n              },\n            },\n          },\n          orderBy,\n          skip,\n          take: limit,\n        }),\n        prisma.property.count({ where }),\n      ]);\n\n      // Transform properties to match our interface\n      const transformedProperties: Property[] = properties.map(property => ({\n        id: property.id,\n        title: property.title,\n        description: property.description,\n        price: property.price || undefined,\n        address: property.address || undefined,\n        neighborhood: property.neighborhood || undefined,\n        city: property.city || undefined,\n        state: property.state || undefined,\n        zipCode: property.zipCode || undefined,\n        bedrooms: property.bedrooms || undefined,\n        bathrooms: property.bathrooms || undefined,\n        area: property.area || undefined,\n        images: this.parseImages(property.images),\n        listingType: property.listingType,\n        premiumInfo: property.premiumInfo || undefined,\n        isActive: property.isActive,\n        createdAt: property.createdAt,\n        updatedAt: property.updatedAt,\n        ownerId: property.ownerId,\n        owner: property.owner ? {\n          id: property.owner.id,\n          name: property.owner.name || undefined,\n          email: property.owner.email,\n        } : undefined,\n      }));\n\n      return {\n        properties: transformedProperties,\n        total,\n        page,\n        totalPages: Math.ceil(total / limit),\n      };\n    } catch (error) {\n      console.error('Error fetching properties:', error);\n      throw new Error('Failed to fetch properties');\n    }\n  }\n\n  // Get a single property by ID\n  static async getPropertyById(id: string): Promise<Property | null> {\n    try {\n      const property = await prisma.property.findUnique({\n        where: { id },\n        include: {\n          owner: {\n            select: {\n              id: true,\n              name: true,\n              email: true,\n            },\n          },\n        },\n      });\n\n      if (!property) return null;\n\n      return {\n        id: property.id,\n        title: property.title,\n        description: property.description,\n        price: property.price || undefined,\n        address: property.address || undefined,\n        neighborhood: property.neighborhood || undefined,\n        city: property.city || undefined,\n        state: property.state || undefined,\n        zipCode: property.zipCode || undefined,\n        bedrooms: property.bedrooms || undefined,\n        bathrooms: property.bathrooms || undefined,\n        area: property.area || undefined,\n        images: this.parseImages(property.images),\n        listingType: property.listingType,\n        premiumInfo: property.premiumInfo || undefined,\n        isActive: property.isActive,\n        createdAt: property.createdAt,\n        updatedAt: property.updatedAt,\n        ownerId: property.ownerId,\n        owner: property.owner ? {\n          id: property.owner.id,\n          name: property.owner.name || undefined,\n          email: property.owner.email,\n        } : undefined,\n      };\n    } catch (error) {\n      console.error('Error fetching property:', error);\n      throw new Error('Failed to fetch property');\n    }\n  }\n\n  // Create a new property\n  static async createProperty(data: PropertyFormData, ownerId: string): Promise<Property> {\n    try {\n      // In production, upload images to cloud storage and get URLs\n      const imageUrls = data.images.map((file: File) => URL.createObjectURL(file));\n\n      const property = await prisma.property.create({\n        data: {\n          title: data.title,\n          description: data.description,\n          price: data.price,\n          address: data.address,\n          neighborhood: data.neighborhood,\n          city: data.city,\n          state: data.state,\n          zipCode: data.zipCode,\n          bedrooms: data.bedrooms,\n          bathrooms: data.bathrooms,\n          area: data.area,\n          images: imageUrls,\n          listingType: data.listingType,\n          premiumInfo: data.premiumInfo,\n          ownerId,\n        },\n        include: {\n          owner: {\n            select: {\n              id: true,\n              name: true,\n              email: true,\n            },\n          },\n        },\n      });\n\n      return {\n        id: property.id,\n        title: property.title,\n        description: property.description,\n        price: property.price || undefined,\n        address: property.address || undefined,\n        neighborhood: property.neighborhood || undefined,\n        city: property.city || undefined,\n        state: property.state || undefined,\n        zipCode: property.zipCode || undefined,\n        bedrooms: property.bedrooms || undefined,\n        bathrooms: property.bathrooms || undefined,\n        area: property.area || undefined,\n        images: this.parseImages(property.images),\n        listingType: property.listingType,\n        premiumInfo: property.premiumInfo || undefined,\n        isActive: property.isActive,\n        createdAt: property.createdAt,\n        updatedAt: property.updatedAt,\n        ownerId: property.ownerId,\n        owner: property.owner ? {\n          id: property.owner.id,\n          name: property.owner.name || undefined,\n          email: property.owner.email,\n        } : undefined,\n      };\n    } catch (error) {\n      console.error('Error creating property:', error);\n      throw new Error('Failed to create property');\n    }\n  }\n\n  // Update an existing property\n  static async updateProperty(id: string, data: Partial<PropertyFormData>): Promise<Property | null> {\n    try {\n      // Handle image conversion if images are provided\n      const updateData: any = {\n        title: data.title,\n        description: data.description,\n        price: data.price,\n        address: data.address,\n        neighborhood: data.neighborhood,\n        city: data.city,\n        state: data.state,\n        zipCode: data.zipCode,\n        bedrooms: data.bedrooms,\n        bathrooms: data.bathrooms,\n        area: data.area,\n        listingType: data.listingType,\n        premiumInfo: data.premiumInfo,\n      };\n\n      // Remove undefined values\n      Object.keys(updateData).forEach(key => {\n        if (updateData[key] === undefined) {\n          delete updateData[key];\n        }\n      });\n\n      if (data.images && data.images.length > 0) {\n        updateData.images = data.images.map((file: File) => URL.createObjectURL(file));\n      }\n\n      const property = await prisma.property.update({\n        where: { id },\n        data: updateData,\n        include: {\n          owner: {\n            select: {\n              id: true,\n              name: true,\n              email: true,\n            },\n          },\n        },\n      });\n\n      return {\n        id: property.id,\n        title: property.title,\n        description: property.description,\n        price: property.price || undefined,\n        address: property.address || undefined,\n        neighborhood: property.neighborhood || undefined,\n        city: property.city || undefined,\n        state: property.state || undefined,\n        zipCode: property.zipCode || undefined,\n        bedrooms: property.bedrooms || undefined,\n        bathrooms: property.bathrooms || undefined,\n        area: property.area || undefined,\n        images: this.parseImages(property.images),\n        listingType: property.listingType,\n        premiumInfo: property.premiumInfo || undefined,\n        isActive: property.isActive,\n        createdAt: property.createdAt,\n        updatedAt: property.updatedAt,\n        ownerId: property.ownerId,\n        owner: property.owner ? {\n          id: property.owner.id,\n          name: property.owner.name || undefined,\n          email: property.owner.email,\n        } : undefined,\n      };\n    } catch (error) {\n      console.error('Error updating property:', error);\n      throw new Error('Failed to update property');\n    }\n  }\n\n  // Delete a property\n  static async deleteProperty(id: string): Promise<boolean> {\n    try {\n      await prisma.property.update({\n        where: { id },\n        data: { isActive: false },\n      });\n      return true;\n    } catch (error) {\n      console.error('Error deleting property:', error);\n      return false;\n    }\n  }\n\n  // Get featured properties (for homepage)\n  static async getFeaturedProperties(limit: number = 6): Promise<Property[]> {\n    try {\n      const properties = await prisma.property.findMany({\n        where: { isActive: true },\n        include: {\n          owner: {\n            select: {\n              id: true,\n              name: true,\n              email: true,\n            },\n          },\n        },\n        orderBy: { createdAt: 'desc' },\n        take: limit,\n      });\n\n      return properties.map(property => ({\n        id: property.id,\n        title: property.title,\n        description: property.description,\n        price: property.price || undefined,\n        address: property.address || undefined,\n        neighborhood: property.neighborhood || undefined,\n        city: property.city || undefined,\n        state: property.state || undefined,\n        zipCode: property.zipCode || undefined,\n        bedrooms: property.bedrooms || undefined,\n        bathrooms: property.bathrooms || undefined,\n        area: property.area || undefined,\n        images: this.parseImages(property.images),\n        listingType: property.listingType,\n        premiumInfo: property.premiumInfo || undefined,\n        isActive: property.isActive,\n        createdAt: property.createdAt,\n        updatedAt: property.updatedAt,\n        ownerId: property.ownerId,\n        owner: property.owner ? {\n          id: property.owner.id,\n          name: property.owner.name || undefined,\n          email: property.owner.email,\n        } : undefined,\n      }));\n    } catch (error) {\n      console.error('Error fetching featured properties:', error);\n      throw new Error('Failed to fetch featured properties');\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1154, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/dashboard/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport Layout from '@/components/Layout';\nimport { useLanguage } from '@/context/LanguageContext';\nimport { Property } from '@/types/property';\nimport { PropertyService } from '@/lib/propertyService';\nimport Link from 'next/link';\n\nconst DashboardPage = () => {\n  const { t } = useLanguage();\n  const [properties, setProperties] = useState<Property[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [stats, setStats] = useState({\n    total: 0,\n    active: 0,\n    premium: 0,\n    free: 0\n  });\n\n  useEffect(() => {\n    const loadDashboardData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const result = await PropertyService.getProperties({\n          limit: 100 // Get all properties for admin dashboard\n        });\n        \n        setProperties(result.properties);\n        \n        // Calculate stats based on new database structure\n        const total = result.properties.length;\n        const active = result.properties.filter(p => p.isActive).length;\n        const premium = result.properties.filter(p => p.listingType === 'premium').length;\n        const free = result.properties.filter(p => p.listingType === 'free').length;\n        \n        setStats({ total, active, premium, free });\n      } catch (error) {\n        console.error('Error loading dashboard data:', error);\n        setError('Failed to load dashboard data. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadDashboardData();\n  }, []);\n\n  const formatPrice = (price?: number) => {\n    if (!price) return 'N/A';\n    return new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(price);\n  };\n\n  const getImageSrc = (images: string[]) => {\n    if (images.length === 0) return 'https://storage.googleapis.com/workspace-0f70711f-8b4e-4d94-86f1-2a93ccde5887/image/6d42a824-e345-4c76-9b2c-20f5b5195375.png';\n    \n    // Handle both string URLs and image objects\n    const firstImage = images[0];\n    if (typeof firstImage === 'string') {\n      return firstImage;\n    }\n    \n    // If it's an object with src property\n    if (typeof firstImage === 'object' && firstImage !== null && 'src' in firstImage) {\n      return (firstImage as any).src;\n    }\n    \n    return 'https://storage.googleapis.com/workspace-0f70711f-8b4e-4d94-86f1-2a93ccde5887/image/6d42a824-e345-4c76-9b2c-20f5b5195375.png';\n  };\n\n  if (loading) {\n    return (\n      <Layout>\n        <div className=\"min-h-screen bg-gray-50 py-12\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"text-center\">\n              <div className=\"text-xl text-gray-600\">Carregando dashboard...</div>\n            </div>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n\n  if (error) {\n    return (\n      <Layout>\n        <div className=\"min-h-screen bg-gray-50 py-12\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"text-center\">\n              <div className=\"text-xl text-red-600 mb-4\">{error}</div>\n              <button \n                onClick={() => window.location.reload()}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n              >\n                Tentar Novamente\n              </button>\n            </div>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout>\n      <div className=\"min-h-screen bg-gray-50 py-8\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          {/* Header */}\n          <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center mb-8 gap-4\">\n            <div>\n              <h1 className=\"text-4xl font-bold text-gray-900\">\n                Dashboard Administrativo\n              </h1>\n              <p className=\"text-xl text-gray-600 mt-2\">\n                Gerencie todas as propriedades e usuários da plataforma\n              </p>\n            </div>\n            <Link \n              href=\"/properties/new\" \n              className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-medium\"\n            >\n              Nova Propriedade\n            </Link>\n          </div>\n\n          {/* Stats Cards */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-12\">\n            <div className=\"bg-white rounded-lg shadow-sm p-6 text-center border border-gray-200\">\n              <div className=\"text-3xl font-bold mb-2 text-blue-600\">\n                {stats.total}\n              </div>\n              <div className=\"text-gray-600 font-medium\">Total de Propriedades</div>\n            </div>\n            \n            <div className=\"bg-white rounded-lg shadow-sm p-6 text-center border border-gray-200\">\n              <div className=\"text-3xl font-bold mb-2 text-green-600\">\n                {stats.active}\n              </div>\n              <div className=\"text-gray-600 font-medium\">Propriedades Ativas</div>\n            </div>\n            \n            <div className=\"bg-white rounded-lg shadow-sm p-6 text-center border border-gray-200\">\n              <div className=\"text-3xl font-bold mb-2 text-purple-600\">\n                {stats.premium}\n              </div>\n              <div className=\"text-gray-600 font-medium\">Listagens Premium</div>\n            </div>\n            \n            <div className=\"bg-white rounded-lg shadow-sm p-6 text-center border border-gray-200\">\n              <div className=\"text-3xl font-bold mb-2 text-orange-600\">\n                {stats.free}\n              </div>\n              <div className=\"text-gray-600 font-medium\">Listagens Gratuitas</div>\n            </div>\n          </div>\n\n          {/* Navigation Tabs */}\n          <div className=\"bg-white rounded-lg shadow-sm mb-8 border border-gray-200\">\n            <div className=\"border-b border-gray-200\">\n              <nav className=\"flex space-x-8 px-6\">\n                <button className=\"py-4 px-1 border-b-2 border-blue-500 font-medium text-blue-600\">\n                  Propriedades\n                </button>\n                <button className=\"py-4 px-1 border-b-2 border-transparent font-medium text-gray-500 hover:text-gray-700\">\n                  Visitas\n                </button>\n                <button className=\"py-4 px-1 border-b-2 border-transparent font-medium text-gray-500 hover:text-gray-700\">\n                  Usuários\n                </button>\n                <button className=\"py-4 px-1 border-b-2 border-transparent font-medium text-gray-500 hover:text-gray-700\">\n                  Notificações\n                </button>\n              </nav>\n            </div>\n          </div>\n\n          {/* Properties Management */}\n          <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n            <div className=\"px-6 py-4 border-b border-gray-200\">\n              <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n                <h2 className=\"text-2xl font-bold text-gray-900\">\n                  Gerenciar Propriedades\n                </h2>\n                <div className=\"flex gap-2\">\n                  <select className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm\">\n                    <option value=\"\">Todos os tipos</option>\n                    <option value=\"free\">Gratuitas</option>\n                    <option value=\"premium\">Premium</option>\n                  </select>\n                  <select className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm\">\n                    <option value=\"\">Todos os status</option>\n                    <option value=\"active\">Ativas</option>\n                    <option value=\"inactive\">Inativas</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            {properties.length === 0 ? (\n              <div className=\"text-center py-12\">\n                <div className=\"text-gray-500 mb-4\">Nenhuma propriedade encontrada</div>\n                <Link \n                  href=\"/properties/new\" \n                  className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-medium\"\n                >\n                  Criar Primeira Propriedade\n                </Link>\n              </div>\n            ) : (\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full\">\n                  <thead>\n                    <tr className=\"border-b border-gray-200 bg-gray-50\">\n                      <th className=\"text-left py-3 px-6 font-medium text-gray-700\">Propriedade</th>\n                      <th className=\"text-left py-3 px-6 font-medium text-gray-700\">Tipo</th>\n                      <th className=\"text-left py-3 px-6 font-medium text-gray-700\">Preço</th>\n                      <th className=\"text-left py-3 px-6 font-medium text-gray-700\">Localização</th>\n                      <th className=\"text-left py-3 px-6 font-medium text-gray-700\">Status</th>\n                      <th className=\"text-left py-3 px-6 font-medium text-gray-700\">Proprietário</th>\n                      <th className=\"text-left py-3 px-6 font-medium text-gray-700\">Ações</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {properties.map((property) => (\n                      <tr key={property.id} className=\"border-b border-gray-100 hover:bg-gray-50\">\n                        <td className=\"py-4 px-6\">\n                          <div className=\"flex items-center\">\n                            <img\n                              src={getImageSrc(property.images)}\n                              alt={property.title}\n                              className=\"w-16 h-16 object-cover rounded-lg mr-4\"\n                              onError={(e) => {\n                                (e.target as HTMLImageElement).src = 'https://storage.googleapis.com/workspace-0f70711f-8b4e-4d94-86f1-2a93ccde5887/image/6d42a824-e345-4c76-9b2c-20f5b5195375.png';\n                              }}\n                            />\n                            <div>\n                              <div className=\"font-medium text-gray-900 max-w-xs truncate\">\n                                {property.title}\n                              </div>\n                              <div className=\"text-sm text-gray-500\">\n                                {property.bedrooms}q • {property.bathrooms}b • {property.area}m²\n                              </div>\n                            </div>\n                          </div>\n                        </td>\n                        <td className=\"py-4 px-6\">\n                          <span className={`px-3 py-1 rounded-full text-xs font-medium ${\n                            property.listingType === 'premium' \n                              ? 'bg-purple-100 text-purple-800' \n                              : 'bg-green-100 text-green-800'\n                          }`}>\n                            {property.listingType === 'premium' ? 'Premium' : 'Gratuita'}\n                          </span>\n                        </td>\n                        <td className=\"py-4 px-6 font-medium text-gray-900\">\n                          {formatPrice(property.price)}\n                        </td>\n                        <td className=\"py-4 px-6 text-gray-600\">\n                          <div className=\"max-w-xs truncate\">\n                            {property.city}, {property.state}\n                          </div>\n                        </td>\n                        <td className=\"py-4 px-6\">\n                          <span className={`px-3 py-1 rounded-full text-xs font-medium ${\n                            property.isActive \n                              ? 'bg-green-100 text-green-800' \n                              : 'bg-red-100 text-red-800'\n                          }`}>\n                            {property.isActive ? 'Ativa' : 'Inativa'}\n                          </span>\n                        </td>\n                        <td className=\"py-4 px-6 text-gray-600\">\n                          <div className=\"max-w-xs truncate\">\n                            {property.owner?.name || property.owner?.email || 'N/A'}\n                          </div>\n                        </td>\n                        <td className=\"py-4 px-6\">\n                          <div className=\"flex space-x-3\">\n                            <Link \n                              href={`/properties/${property.id}`}\n                              className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\"\n                            >\n                              Ver\n                            </Link>\n                            <button className=\"text-gray-600 hover:text-gray-800 text-sm font-medium\">\n                              Editar\n                            </button>\n                            <button className=\"text-red-600 hover:text-red-800 text-sm font-medium\">\n                              {property.isActive ? 'Desativar' : 'Ativar'}\n                            </button>\n                          </div>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </div>\n\n          {/* Quick Stats Summary */}\n          <div className=\"mt-8 bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n            <h3 className=\"text-lg font-bold text-gray-900 mb-4\">Resumo Rápido</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              <div>\n                <div className=\"text-sm text-gray-600 mb-1\">Propriedades Mais Recentes</div>\n                <div className=\"text-2xl font-bold text-blue-600\">\n                  {properties.filter(p => {\n                    const dayAgo = new Date();\n                    dayAgo.setDate(dayAgo.getDate() - 1);\n                    return new Date(p.createdAt) > dayAgo;\n                  }).length}\n                </div>\n              </div>\n              <div>\n                <div className=\"text-sm text-gray-600 mb-1\">Valor Médio (Premium)</div>\n                <div className=\"text-2xl font-bold text-green-600\">\n                  {formatPrice(\n                    properties\n                      .filter(p => p.listingType === 'premium' && p.price)\n                      .reduce((sum, p) => sum + (p.price || 0), 0) / \n                    Math.max(properties.filter(p => p.listingType === 'premium' && p.price).length, 1)\n                  )}\n                </div>\n              </div>\n              <div>\n                <div className=\"text-sm text-gray-600 mb-1\">Cidades Atendidas</div>\n                <div className=\"text-2xl font-bold text-purple-600\">\n                  {new Set(properties.map(p => p.city).filter(Boolean)).size}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default DashboardPage;\n"],"names":[],"mappings":"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","debugId":null}}]
}